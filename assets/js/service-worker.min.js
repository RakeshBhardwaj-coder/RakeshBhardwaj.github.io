const CACHE_NAME="offline",OFFLINE_URL="offline.html";self.addEventListener("install",function(e){console.log("[ServiceWorker] Install"),e.waitUntil((async()=>{const e=await caches.open(CACHE_NAME);await e.add(new Request(OFFLINE_URL,{cache:"reload"}))})()),self.skipWaiting()}),self.addEventListener("activate",e=>{console.log("[ServiceWorker] Activate"),e.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable()})()),self.clients.claim()}),self.addEventListener("fetch",function(e){"navigate"===e.request.mode&&e.respondWith((async()=>{try{const t=await e.preloadResponse;if(t)return t;const a=await fetch(e.request);return a}catch(e){console.log("[Service Worker] Fetch failed; returning offline page instead.",e);const t=await caches.open(CACHE_NAME),a=await t.match(OFFLINE_URL);return a}})())});